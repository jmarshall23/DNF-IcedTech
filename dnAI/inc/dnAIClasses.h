/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if _MSC_VER
#pragma pack (push,4)
#endif

#ifndef DNAI_API
#define DNAI_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern DNAI_API FName DNAI_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(StopMovingNative)

#if !defined(NAMES_ONLY) || defined(DN_FORCE_NAME_EXPORT)

struct DNAI_API FSNPCAnimEvent
{
    class USound* EventSound;
    BITFIELD bEnabled:1 GCC_PACK(4);
    FName TriggerEvent GCC_PACK(4);
    FLOAT SoundVolume;
};


struct AAIPawn_eventStopMovingNative_Parms
{
};
class DNAI_API AAIPawn : public APawn
{
public:
    BITFIELD bAlwaysUseTentacles:1 GCC_PACK(4);
    FName InitialIdlingAnim GCC_PACK(4);
    FName InitialTopIdlingAnim;
    BITFIELD bCanHaveCash:1 GCC_PACK(4);
    BITFIELD bAggressiveToPlayer:1;
    FLOAT RunSpeed GCC_PACK(4);
    FName HateTag;
    class UClass* CarcassType;
    BITFIELD bVisiblySnatched:1 GCC_PACK(4);
    FLOAT AggroSnatchDistance GCC_PACK(4);
    class APatrolControl* CurrentPatrolControl;
    FName PatrolTag;
    BITFIELD bPatrolled:1 GCC_PACK(4);
    FName FollowEvent GCC_PACK(4);
    BITFIELD bFollowEventOnceOnly:1 GCC_PACK(4);
    FLOAT AIMeleeRange GCC_PACK(4);
    BITFIELD bHateWhenSnatched:1 GCC_PACK(4);
    FName ControlTag GCC_PACK(4);
    FName CoverTag;
    BITFIELD bForcedAttack:1 GCC_PACK(4);
    BITFIELD bShielded:1;
    BITFIELD bCamping:1;
    FName PendingTopAnimation GCC_PACK(4);
    FName PendingBottomAnimation;
    FName PendingAllAnimation;
    class USound* PendingSound;
    FName PendingFocusTag;
    BITFIELD bFocusOnPlayer:1 GCC_PACK(4);
    BITFIELD bCanBeUsed:1;
    class AActor* MyGiveItem GCC_PACK(4);
    class ANPCActivityEvent* MyAE;
    class AActor* AEDestination;
    class AActor* PendingTriggerActor;
    BITFIELD bDisableUseTrigEvent:1 GCC_PACK(4);
    class AActor* Obstruction GCC_PACK(4);
    FLOAT WalkingSpeed;
    class AActor* PendingDoor;
    BITFIELD bFollowEventDisabled:1 GCC_PACK(4);
    BITFIELD bSnatchedAtStartup:1;
    BITFIELD bSleeping:1;
    BITFIELD bEyeless:1;
    BITFIELD bLegless:1;
    BITFIELD bCanHeadTrack:1;
    BITFIELD bCanTorsoTrack:1;
    BITFIELD bReadyToAttack:1;
    BITFIELD bSawEnemy:1;
    class AActor* OrderObject GCC_PACK(4);
    class ANavigationPoint* CurrentPatrolPoint;
    class APatrolEvent* CurrentPatrolEvent;
    class ANPCActivityEvent* CurrentActivityEvent;
    class ACreatureFactory* MyFactory;
    FSNPCAnimEvent NPCAnimEvent[15];
    class AEffects* Shield;
    class AActor* SuspiciousActor;
    class ASnatchActor* MySnatcher;
    BITFIELD bEMPed:1 GCC_PACK(4);
    class AAICombatController* MyCombatController GCC_PACK(4);
    FVector WanderDir;
    inline void __fastcall eventStopMovingNative()
    {
        ProcessEvent(FindFunctionChecked(DNAI_StopMovingNative),NULL);
    }
    DECLARE_CLASS(AAIPawn,APawn,0|CLASS_Config)
    NO_DEFAULT_CONSTRUCTOR(AAIPawn)
};

enum ETentacleAttack
{
    TENTACLE_Thrust         =0,
    TENTACLE_Slash          =1,
    TENTACLE_MAX            =2,
};
enum EBrowExpression
{
    BROW_Normal             =0,
    BROW_Raised             =1,
    BROW_Lowered            =2,
    BROW_MAX                =3,
};
enum EMouthExpression
{
    MOUTH_Normal            =0,
    MOUTH_Smile             =1,
    MOUTH_Frown             =2,
    MOUTH_MAX               =3,
};
enum ENPCOrders
{
    ORDERS_Idle             =0,
    ORDERS_Wander           =1,
    ORDERS_Patrol           =2,
    ORDERS_Defend           =3,
    ORDERS_Follow           =4,
    ORDERS_Retreat          =5,
    ORDERS_MAX              =6,
};
struct DNAI_API FSTentacleOffsets
{
    FVector MouthOffset;
    FVector RightShoulderOffset;
    FVector LeftShoulderOffset;
    FVector HeadOffset;
    FRotator MouthRotation;
    FRotator RightShoulderRotation;
    FRotator LeftShoulderRotation;
    FRotator HeadRotation;
};

struct DNAI_API FESpeechInfo
{
    BITFIELD RetainNoTorsoTracking:1 GCC_PACK(4);
    BITFIELD RetainHeadTracking:1;
    BITFIELD bCannotLookAround:1;
    FLOAT LookAroundInterval GCC_PACK(4);
    FLOAT PauseBeforeSpeech;
    BITFIELD bNoHeadTracking:1 GCC_PACK(4);
    BITFIELD bNoTorsoTracking:1;
    class USound* Sound GCC_PACK(4);
    FLOAT SoundVolume;
    FName TopAnim;
    FName BottomAnim;
    FName AllAnim;
    BITFIELD bWillNotTurn:1 GCC_PACK(4);
    FLOAT TurnFactorHead GCC_PACK(4);
    FLOAT TurnFactorChest;
    FLOAT TurnFactorAbdomen;
    BITFIELD bLoopAllAnim:1 GCC_PACK(4);
    FName FaceDispatcherTag GCC_PACK(4);
    BITFIELD bAlreadyUsed:1 GCC_PACK(4);
    BITFIELD bRandomUsed:1;
    FLOAT PauseBeforeAnim GCC_PACK(4);
    BYTE FacialExpression;
    BYTE ExitFacialExpression;
    BITFIELD bNoExitDelay:1 GCC_PACK(4);
    BITFIELD bUseFaceAsDefault:1;
    BITFIELD bLoopFaceAnim:1;
    INT FacialExpressionIndex GCC_PACK(4);
    INT ExitFacialExpressionIndex;
};

struct DNAI_API FSCreatureTrackingInfo
{
    FLOAT TrackTimer;
    FRotator Rotation;
    FRotator DesiredRotation;
    FRotator RotationRate;
    FRotator RotationConstraints;
    FLOAT Weight;
    FLOAT DesiredWeight;
    FLOAT WeightRate;
};

struct DNAI_API FSNPCWeaponInfo
{
    FStringNoInit WeaponClass;
    INT PrimaryAmmoCount;
    INT AltAmmoCount;
};

struct DNAI_API FSHeadCreeperInfo
{
    class UTexture* HeadTex;
    FVector MountOrigin;
    FRotator MountAngles;
};

#define UCONST_FriendlyEgoKillValue -25
#define UCONST_EnemyEgoKillValue 8
#define UCONST_MaxCarriedWeapons 8

class DNAI_API AHumanNPC : public AAIPawn
{
public:
    FLOAT DuckCollisionHeight;
    FLOAT OriginalCollisionHeight;
    FLOAT DestinationCollisionHeight;
    FLOAT CollisionHeightTime;
    FLOAT CollisionHeightStartTime;
    FLOAT HeadCreeperOdds;
    FLOAT WakeRadius;
    class AdnDecoration* MyRope;
    class AAIClimbControl* MyClimbControl;
    BITFIELD bPanicOnFire:1 GCC_PACK(4);
    FLOAT LookInterval GCC_PACK(4);
    BITFIELD bFixedPosition:1 GCC_PACK(4);
    BITFIELD bSleepAttack:1;
    FLOAT LastLookTime GCC_PACK(4);
    class AActor* NoiseInstigator;
    BITFIELD bLookingAround:1 GCC_PACK(4);
    BITFIELD bNoLookAround:1;
    BITFIELD bForceNoLookAround:1;
    FLOAT OldPeripheralVision GCC_PACK(4);
    BITFIELD bPatrolIgnoreSeePlayer:1 GCC_PACK(4);
    BITFIELD bIdleSeeFriendlyMonsters:1;
    BITFIELD bIdleSeeFriendlyPlayer:1;
    FLOAT TempHeadFactor GCC_PACK(4);
    FLOAT TempChestFactor;
    FLOAT TempAbdomenFactor;
    BITFIELD bStopWhenReached:1 GCC_PACK(4);
    FLOAT FollowOffset GCC_PACK(4);
    FName FollowTag;
    BITFIELD bWalkFollow:1 GCC_PACK(4);
    BITFIELD bWanderAfterFollow:1;
    class AActor* FollowActor GCC_PACK(4);
    BITFIELD bSuffering:1 GCC_PACK(4);
    FLOAT SufferFrequency GCC_PACK(4);
    BITFIELD bSniper:1 GCC_PACK(4);
    BITFIELD bShieldUser:1;
    FName StartPatrolEvent GCC_PACK(4);
    FName EndPatrolEvent;
    INT MaxShots;
    INT MinShots;
    class AEDFshield* MyShield;
    BITFIELD bKnockedBack:1 GCC_PACK(4);
    INT ShieldShotCount GCC_PACK(4);
    class ANavigationPoint* FinalPatrolPoint;
    BITFIELD bCoweringDisabled:1 GCC_PACK(4);
    FLOAT LastCowerTime GCC_PACK(4);
    class ANavigationPoint* NearestHidingSpot;
    BITFIELD bUsingCover:1 GCC_PACK(4);
    class ANavigationPoint* MyCoverPoint GCC_PACK(4);
    BITFIELD bEmergencyDeparture:1 GCC_PACK(4);
    FLOAT JumpTimer GCC_PACK(4);
    BITFIELD bCanEmergencyJump:1 GCC_PACK(4);
    BITFIELD bAtDuckPoint:1;
    INT LegHealthLeft GCC_PACK(4);
    INT LegHealthRight;
    FLOAT PainInterval;
    BITFIELD bNPCInvulnerable:1 GCC_PACK(4);
    BITFIELD bSneakAttack:1;
    BITFIELD bDamagedByShotgun:1;
    class AActor* ShotgunInstigator GCC_PACK(4);
    class APawn* KilledByPawn;
    FRotator KillerRotation;
    BITFIELD bArmless:1 GCC_PACK(4);
    FLOAT LastPain GCC_PACK(4);
    BITFIELD bNoPain:1 GCC_PACK(4);
    BITFIELD bEyesShut:1;
    FSHeadCreeperInfo HeadCreeperInfo GCC_PACK(4);
    FName SpecialWalkAnim;
    FName SpecialRunAnim;
    BYTE NPCOrders;
    FLOAT AggressionDistance;
    BITFIELD bReuseIdlingAnim:1 GCC_PACK(4);
    BYTE FacialExpression GCC_PACK(4);
    INT FacialExpressionIndex;
    FName Orders;
    BITFIELD bAtCoverPoint:1 GCC_PACK(4);
    FLOAT TimeBetweenCrouching GCC_PACK(4);
    FLOAT TimeBetweenStanding;
    FSNPCWeaponInfo WeaponInfo[9];
    FSCreatureTrackingInfo EyeTracking;
    FSCreatureTrackingInfo HeadTracking;
    BITFIELD bTurning:1 GCC_PACK(4);
    FLOAT FireTimer GCC_PACK(4);
    FLOAT TimeBetweenBursts;
    BITFIELD bWeaponFireDisabled:1 GCC_PACK(4);
    FLOAT TimeBetweenAttacks GCC_PACK(4);
    FLOAT Aggressiveness;
    FLOAT RefireRate;
    BITFIELD bLeadTarget:1 GCC_PACK(4);
    FLOAT BaseAggressiveness GCC_PACK(4);
    BITFIELD bCanFire:1 GCC_PACK(4);
    BITFIELD bCanDuck:1;
    BITFIELD bFiringPaused:1;
    BITFIELD bFrustrated:1;
    class AActor* OldEnemy GCC_PACK(4);
    BITFIELD bNovice:1 GCC_PACK(4);
    BITFIELD bThreePlus:1;
    BITFIELD bClearShot:1;
    BITFIELD bDevious:1;
    BITFIELD bMustHunt:1;
    class AWeapon* EnemyDropped GCC_PACK(4);
    class UClass* FavoriteWeapon;
    FLOAT Accuracy;
    FLOAT LastPainTime;
    FLOAT LastAcquireTime;
    class AAmbushpoint* AmbushSpot;
    FLOAT BaseAlertness;
    FVector RealLastSeenPos;
    INT AmmoMode;
    class AActor* TroubleMaker;
    FLOAT AimAdjust;
    FLOAT LastWeaponSwitchTime;
    BITFIELD bSightlessFire:1 GCC_PACK(4);
    FLOAT SightlessFireTime GCC_PACK(4);
    FLOAT LeftoverFireTimer;
    FLOAT PunchDamage;
    FLOAT KickDamage;
    BITFIELD bMeleeMode:1 GCC_PACK(4);
    INT NPCFaceNum GCC_PACK(4);
    INT RehuntCount;
    FLOAT LastSwitchTime;
    INT SGReloadCount;
    BITFIELD bReloading:1 GCC_PACK(4);
    BITFIELD bRangeDodging:1;
    BITFIELD bRearming:1;
    BITFIELD bSwitchSoundOn:1;
    FLOAT CrouchTime GCC_PACK(4);
    BITFIELD bCrouchShiftingDisabled:1 GCC_PACK(4);
    BITFIELD bLimpingLeft:1;
    BITFIELD bLimpingRight:1;
    BITFIELD bBackPeddling:1;
    BITFIELD bWalkMode:1;
    BITFIELD bHeadBlownOff:1;
    BITFIELD bShortPains:1;
    BITFIELD bStrafeDir:1;
    BITFIELD bSpecialGoal:1;
    FLOAT WalkingSpeed GCC_PACK(4);
    FLOAT StrafingAbility;
    INT numHuntPaths;
    BITFIELD bTacticalDir:1 GCC_PACK(4);
    BITFIELD bCrouching:1;
    FLOAT LastInvFind GCC_PACK(4);
    BITFIELD bSpecialPausing:1 GCC_PACK(4);
    class ANavigationPoint* BlockedPath GCC_PACK(4);
    FVector JumpDestination;
    class AAlternatePath* AlternatePath;
    FLOAT TacticalOffset;
    FVector ThreatLocation;
    BITFIELD bCanTurn:1 GCC_PACK(4);
    FLOAT PostAcquisitionDelay GCC_PACK(4);
    FLOAT PreAcquisitionDelay;
    FName AcquisitionTopAnim;
    FName AcquisitionBottomAnim;
    FName AcquisitionAllAnim;
    class USound* AcquisitionSound;
    BITFIELD bAcquisitionComplete:1 GCC_PACK(4);
    BITFIELD bLoopAcquisitionAnim:1;
    BYTE MouthExpression GCC_PACK(4);
    BYTE BrowExpression;
    BITFIELD bJumpCower:1 GCC_PACK(4);
    FESpeechInfo CriticalSpeech[32] GCC_PACK(4);
    FESpeechInfo IdleSpeech[32];
    FESpeechInfo CurrentSpeechInfo;
    BITFIELD bCanSpeak:1 GCC_PACK(4);
    class AActor* SpeechTarget GCC_PACK(4);
    BITFIELD bCanExitConversation:1 GCC_PACK(4);
    BITFIELD bCanSayPinDownPhrase:1;
    BITFIELD bNotifiedByFriends:1;
    class AEDFSpeechCoordinator* SpeechCoordinator GCC_PACK(4);
    class USound* Drown;
    class USound* BreathAgain;
    class USound* HitSound3;
    class USound* HitSound4;
    class USound* Deaths[6];
    class USound* GaspSound;
    class USound* UWHit1;
    class USound* UWHit2;
    class USound* LandGrunt;
    class USound* JumpSound;
    INT MultiSkinsCounter;
    BITFIELD bUseSnatchedEffectsDone:1 GCC_PACK(4);
    BITFIELD bUseSnatchedEffects:1;
    BYTE TentacleAttackType GCC_PACK(4);
    class ATentacle* MyMouthTentacle;
    class ATentacle* MyShoulderTentacle1;
    class ATentacle* MyShoulderTentacle2;
    class ATentacle* MyTemporaryTentacle;
    class ATentacleSmall* MiniTentacle1;
    class ATentacleSmall* MiniTentacle2;
    class ATentacleSmall* MiniTentacle3;
    class ATentacleSmall* MiniTentacle4;
    class ATentacleSmall* TentacleBicepR;
    class ATentacleSmall* TentacleBicepL;
    class ATentacleSmall* TentacleForearmL;
    class ATentacleSmall* TentacleForearmR;
    class ATentacleSmall* TentacleChest;
    class ATentacleSmall* TentacleFootR;
    class ATentacleSmall* TentacleFootL;
    class ATentacleSmall* TentacleShinR;
    class ATentacleSmall* TentacleShinL;
    class ATentacleSmall* TentaclePelvis;
    FSTentacleOffsets TentacleOffsets;
    BITFIELD bVerbose:1 GCC_PACK(4);
    FStringNoInit GoalString GCC_PACK(4);
    FLOAT TimeExisted;
    BITFIELD bReEnableUseTrigger:1 GCC_PACK(4);
    FName UseTriggerEvent GCC_PACK(4);
    DECLARE_CLASS(AHumanNPC,AAIPawn,0|CLASS_Config)
    NO_DEFAULT_CONSTRUCTOR(AHumanNPC)
};


class DNAI_API APigCop : public AHumanNPC
{
public:
    FName NativeRequestedAnimation;
    FStringNoInit NativeRequestState;
    FVector NativeRequestMoveLocation;
    FVector enemyLastSeenLocation;
    BITFIELD EnemyIsVisible:1 GCC_PACK(4);
    INT ApproachState GCC_PACK(4);
    DECLARE_FUNCTION(execStateShootEnemy);
    DECLARE_FUNCTION(execStateApproachingEnemy);
    DECLARE_FUNCTION(execTickAI);
    DECLARE_FUNCTION(execStateSeePlayer);
    DECLARE_FUNCTION(execBeginAI);
    DECLARE_CLASS(APigCop,AHumanNPC,0|CLASS_Config)
    NO_DEFAULT_CONSTRUCTOR(APigCop)
};


class DNAI_API ANavmesh : public AActor
{
public:
    DECLARE_FUNCTION(execCreateNavMeshForLevel);
    DECLARE_CLASS(ANavmesh,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(ANavmesh)
};

#endif

AUTOGENERATE_FUNCTION(ANavmesh,-1,execCreateNavMeshForLevel);
AUTOGENERATE_FUNCTION(APigCop,-1,execStateShootEnemy);
AUTOGENERATE_FUNCTION(APigCop,-1,execStateApproachingEnemy);
AUTOGENERATE_FUNCTION(APigCop,-1,execTickAI);
AUTOGENERATE_FUNCTION(APigCop,-1,execStateSeePlayer);
AUTOGENERATE_FUNCTION(APigCop,-1,execBeginAI);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif NAMES_ONLY

#if _MSC_VER
#pragma pack (pop)
#endif
